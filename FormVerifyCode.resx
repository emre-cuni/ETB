<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAFAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAA
        AAcAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAHAAAAXAAAAK8AAAC7AAAAuwAAALsAAAC7AAAAuwAAALsAAAC7AAAAuwAA
        ALsAAAC7AAAAugAAAJAAAAAmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFwAAADuAAAAvQAAAKIAAACjAAAAowAAAKAAAACgAAAAoAAA
        AKAAAACiAAAAowAAAKMAAACnAAAA4QAAALwAAAATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAArwAAALwAAAAPAAAAAAAAAAEAAAAEAAAAWQAA
        AIgAAACGAAAAfwAAACMAAAAAAAAAAQAAAAAAAABUAAAA7gAAAEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAC8AAAAogAAAAAAAAAAAAAAAAAA
        AAYAAACQAAAA0gAAANAAAADHAAAAOwAAAAAAAAAAAAAAAAAAADUAAADsAAAATQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAALoAAADAAAAATQAA
        AE0AAABNAAAATQAAAFYAAABgAAAAYAAAAF0AAABPAAAATQAAAE0AAABLAAAAcgAAAPAAAABNAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAuAAA
        APsAAADrAAAA6wAAAOsAAADrAAAA6wAAAOoAAADqAAAA6gAAAOsAAADrAAAA6wAAAOsAAADvAAAA+QAA
        AEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAgAAAC7AAAAtwAAADYAAAA2AAAANgAAADYAAAA2AAAANgAAADYAAAA2AAAANgAAADYAAAA2AAAAMwAA
        AGAAAADvAAAATQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAACAAAALwAAACiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAANQAAAOwAAABNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAIAAAAvAAAAKMAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATAAAAQAAA
        AAkAAAAAAAAAAAAAAAAAAAA1AAAA7AAAAE0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAC8AAAAowAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AFMAAADwAAAAfgAAAAcAAAAAAAAAAAAAADUAAADsAAAATQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAALwAAACjAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAWgAAAP0AAAD3AAAAfwAAAAcAAAAAAAAANQAAAOwAAABNAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAvAAAAKMAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABbAAAA6wAAAKcAAADuAAAAfwAAAAQAAAA1AAAA7AAAAE0AAAAAAAAAAAAA
        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
        AAAIAAABDA4//wgKP/+AAD//gAB//+AA//8=
</value>
  </data>
</root>